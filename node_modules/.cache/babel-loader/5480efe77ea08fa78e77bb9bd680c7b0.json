{"ast":null,"code":"var _jsxFileName = \"/Users/colton/Documents/webdev/GitHub/Pizza-Time/src/PizzaMaker.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport pizzaPic from './Pizza.jpg';\nimport customPic from './pizza/custom.png';\nconst meatToppings = ['Pepperoni', 'Ham', 'Sausage', 'Bacon', 'Chicken', 'Beef'];\nconst veggieToppings = ['Onion', 'Green Pepper', 'Mushroom', 'Olive', 'Jalapeno', 'Tomato'];\nconst nonVeggieToppings = ['Pineapple', 'BBQ Sauce', 'Buffalo Sauce'];\n\nfunction PizzaMaker(props) {\n  const [pizza, changePizza] = useState({\n    name: 'Custom Pizza',\n    toppings: [],\n    price: 12.00\n  });\n\n  const updatePizza = async (e, topping, amount) => {\n    let price = 12;\n    e.target.parentNode.querySelector('.Active').classList.remove('Active');\n    e.target.className = 'Active';\n    let {\n      toppings\n    } = pizza;\n    toppings = toppings.filter(i => i !== topping);\n\n    if (amount === 'normal') {\n      toppings = [...toppings, topping];\n    } else if (amount === 'extra') {\n      toppings = [...toppings, topping, topping];\n    }\n\n    price += toppings.length * 0.50;\n    changePizza({ ...pizza,\n      toppings,\n      price\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Pizza-maker-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"Header-pic\",\n    alt: \"\",\n    src: pizzaPic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Pizza-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Pizza-live\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"Pizza-bottom\",\n    alt: \"\",\n    src: customPic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), pizza.toppings.map(topping => React.createElement(\"img\", {\n    className: \"Topping\",\n    alt: \"\",\n    src: require(`./pizza/toppings/${topping}.png`),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Pizza-span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"Pizza-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"$\", pizza.price.toFixed(2)), React.createElement(Link, {\n    to: \"/pizza\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"Add-custom-pizza\",\n    onClick: () => props.pizzaOrder(pizza, 'pizza'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Add to order\")))))), React.createElement(\"div\", {\n    className: \"Toppings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Meats\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, meatToppings.map(topping => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, topping), React.createElement(\"div\", {\n    className: \"Button-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"Active\",\n    onClick: e => updatePizza(e, topping, 'none'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"none\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => updatePizza(e, topping, 'normal'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"normal\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => updatePizza(e, topping, 'extra'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"extra\"))))))), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Veggie\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, veggieToppings.map(topping => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, topping), React.createElement(\"div\", {\n    className: \"Button-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"Active\",\n    onClick: e => updatePizza(e, topping, 'none'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"none\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => updatePizza(e, topping, 'normal'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"normal\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => updatePizza(e, topping, 'extra'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"extra\")))))), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Non Veggie or Meats\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, nonVeggieToppings.map(topping => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, topping), React.createElement(\"div\", {\n    className: \"Button-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"Active\",\n    onClick: e => updatePizza(e, topping, 'none'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"none\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => updatePizza(e, topping, 'normal'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"normal\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => updatePizza(e, topping, 'extra'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"extra\")))))))));\n}\n\nPizzaMaker.propTypes = {\n  pizzaOrder: PropTypes.arrayOf.isRequired\n};\nexport default PizzaMaker;","map":{"version":3,"sources":["/Users/colton/Documents/webdev/GitHub/Pizza-Time/src/PizzaMaker.js"],"names":["React","useState","PropTypes","Link","pizzaPic","customPic","meatToppings","veggieToppings","nonVeggieToppings","PizzaMaker","props","pizza","changePizza","name","toppings","price","updatePizza","e","topping","amount","target","parentNode","querySelector","classList","remove","className","filter","i","length","map","require","toFixed","pizzaOrder","propTypes","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport pizzaPic from './Pizza.jpg';\nimport customPic from './pizza/custom.png';\n\nconst meatToppings = ['Pepperoni', 'Ham', 'Sausage', 'Bacon', 'Chicken', 'Beef'];\nconst veggieToppings = ['Onion', 'Green Pepper', 'Mushroom', 'Olive', 'Jalapeno', 'Tomato'];\nconst nonVeggieToppings = ['Pineapple', 'BBQ Sauce', 'Buffalo Sauce'];\n\nfunction PizzaMaker(props) {\n  const [pizza, changePizza] = useState({\n    name: 'Custom Pizza',\n    toppings: [],\n    price: 12.00,\n  });\n\n  const updatePizza = async (e, topping, amount) => {\n    let price = 12;\n    e.target.parentNode.querySelector('.Active').classList.remove('Active');\n    e.target.className = 'Active';\n    let { toppings } = pizza;\n    toppings = toppings.filter(i => i !== topping);\n    if (amount === 'normal') {\n      toppings = [...toppings, topping];\n    } else if (amount === 'extra') {\n      toppings = [...toppings, topping, topping];\n    }\n    price += (toppings.length * 0.50);\n    changePizza({ ...pizza, toppings, price });\n  };\n\n  return (\n    <div className=\"Pizza-maker-page\">\n      <img className=\"Header-pic\" alt=\"\" src={pizzaPic} />\n      <div className=\"Container\">\n        <div className=\"Pizza-view\">\n          <div className=\"Pizza-live\">\n            <img className=\"Pizza-bottom\" alt=\"\" src={customPic} />\n            {pizza.toppings.map(topping => (\n              <img className=\"Topping\" alt=\"\" src={require(`./pizza/toppings/${topping}.png`)} />\n            ))}\n            <div className=\"Pizza-span\">\n              <span className=\"Pizza-price\">${pizza.price.toFixed(2)}</span>\n              <Link to=\"/pizza\"><button type=\"button\" className=\"Add-custom-pizza\" onClick={() => props.pizzaOrder(pizza, 'pizza')}><span>Add to order</span></button></Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"Toppings\">\n        <div>\n          <h1>Meats</h1>\n          <ul>\n            {meatToppings.map(topping => (\n              <li>\n                <div>\n                  <span>\n                    {topping}\n                  </span>\n                  <div className=\"Button-group\">\n                    <button type=\"button\" className=\"Active\" onClick={e => updatePizza(e, topping, 'none')}>none</button>\n                    <button type=\"button\" onClick={e => updatePizza(e, topping, 'normal')}>normal</button>\n                    <button type=\"button\" onClick={e => updatePizza(e, topping, 'extra')}>extra</button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n          </div>\n          <h1>Veggie</h1>\n          <ul>\n            {veggieToppings.map(topping => (\n              <li>\n                <div>\n                  <span>\n                    {topping}\n                  </span>\n                  <div className=\"Button-group\">\n                    <button type=\"button\" className=\"Active\" onClick={e => updatePizza(e, topping, 'none')}>none</button>\n                    <button type=\"button\" onClick={e => updatePizza(e, topping, 'normal')}>normal</button>\n                    <button type=\"button\" onClick={e => updatePizza(e, topping, 'extra')}>extra</button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n          <h1>Non Veggie or Meats</h1>\n          <ul>\n            {nonVeggieToppings.map(topping => (\n              <li>\n                <div>\n                  <span>\n                    {topping}\n                  </span>\n                  <div className=\"Button-group\">\n                    <button type=\"button\" className=\"Active\" onClick={e => updatePizza(e, topping, 'none')}>none</button>\n                    <button type=\"button\" onClick={e => updatePizza(e, topping, 'normal')}>normal</button>\n                    <button type=\"button\" onClick={e => updatePizza(e, topping, 'extra')}>extra</button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nPizzaMaker.propTypes = {\n  pizzaOrder: PropTypes.arrayOf.isRequired,\n};\n\nexport default PizzaMaker;\n"]},"metadata":{},"sourceType":"module"}